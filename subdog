#!/usr/bin/env bash


# COLORS
BLUE='\033[0;34m'
BBLUE='\033[1;34m'
BYELLOW='\033[1;33m'
GREEN='\033[0;32m'
YELLOW='\033[0;33m'
RED='\033[0;31m'
RESET='\033[0m'


banner(){
    echo -e "${GREEN}
\t\t ___  __  __  ____  ____  _____  ___ 
\t\t/ __)(  )(  )(  _ \(  _ \(  _  )/ __)
\t\t\__ \ )(__)(  ) _ < )(_) ))(_)(( (_-.
\t\t(___/(______)(____/(____/(_____)\___/
\t\t                    coded by ${YELLOW}@rix4uni${RED} in INDIA${RESET}"
}

showhelp(){
    banner
    echo -e "${GREEN}TARGET OPTIONS${RESET}"
    echo -e "   -d, --domain			Single Target domain (domain.com)"
	echo -e "   -o, --output/path		Define output file"
	echo -e ""
	echo -e "${GREEN}USAGE EXAMPLES${RESET}"
    echo -e "   ${BYELLOW}$0 -d example.com${RESET}"
    echo -e "   ${BYELLOW}$0 -d example.com -o domain.txt${RESET}"
	echo -e ""
}


if [[ ! -x "$(command -v jq)" ]]; then
	printf "${BBLUE}Installing jq\n\n"
	if [ -f /etc/os-release ]; then apt install jq -y &>/dev/null;
	elif [ -f /etc/redhat-release ]; then yum install jq -y &>/dev/null;
	elif [ -f /etc/arch-release ]; then sudo pacman -S jq -y &>/dev/null;
	fi
fi

option=$3
output_path=$4
touch $output_path 2>/dev/null
passive_scan(){
	company_name=${domain%%.*}
	curl -s "https://rapiddns.io/subdomain/$domain?full=1#result" | grep "$company_name" | sed 's/<\/\?[^>]\+>//g' | sed '/<a$/d' | sed '1,3d' | sed '/\.$/d' | sort -u
	curl -s "https://api.threatminer.org/v2/domain.php?q=$domain&rt=5" | jq -r '.results[]' 2>/dev/null | grep "$company_name" | sort -u
	curl -s "https://riddler.io/search/exportcsv?q=pld:$domain" | grep  "$company_name" | awk -F, '{print $6}' | sort -u
	curl -s "https://otx.alienvault.com/api/v1/indicators/domain/$domain/passive_dns" | jq '.passive_dns[].hostname' 2>/dev/null | grep "$company_name" | tr -d '"' | sort -u
	curl -s "https://www.threatcrowd.org/searchApi/v2/domain/report/?domain=$domain" | jq -r '.subdomains' 2>/dev/null | grep "$company_name" | tr -d '", ' | sort -u
	curl --insecure --silent "http://web.archive.org/cdx/search/cdx?url=*.$domain/*&output=text&fl=original&collapse=urlkey" | sed -e 's_https*://__' -e "s/\/.*//" -e 's/:.*//' -e 's/^www\.//' | sed "/@/d" | sed -e 's/\.$//' | sort -u
	curl -s "https://api.hackertarget.com/hostsearch/?q=$domain" | cut -f1 -d"," | sort -u
	curl -s "https://crt.sh/?q=%25.$domain&output=json" | jq -r '.[].name_value' | sort -u
	curl -s "https://crt.sh/?q=%25.$domain&output=json" | jq -r '.[].common_name' | sort -u
	curl -s "https://jldc.me/anubis/subdomains/$domain" | jq -r '.'[] | sort -u
	
	if [[ "$option" == "-o" || "$option" == "--output" ]]; then
		cat subdog_subdomain_old.txt | tr -d ' ' | sort -u > $output_path | rm -rf subdog_subdomain_old.txt
		echo -e "${GREEN}$(cat $output_path)${RESET}"
		echo -e "${YELLOW}[+] Number of domains found: $(cat $output_path | wc -l)${RESET}"
		echo -e "${YELLOW}[+] Saved output: $output_path${RESET}"
	else
		cat ./subdog_subdomain_old.txt | tr -d ' ' | sort -u > subdog_subdomain.txt | rm -rf subdog_subdomain_old.txt
		echo -e "${GREEN}$(cat subdog_subdomain.txt)${RESET}"
		echo -e "${YELLOW}[+] Number of domains found: $(cat subdog_subdomain.txt | wc -l)${RESET}"
		echo -e "${YELLOW}[+] Saved output: $PWD/subdog_subdomain.txt${RESET}"
	fi
}


PROGARGS=$(getopt -o ':d:h::' --long 'domain:help' -n 'subdog' -- "$@")


# Note the quotes around "$PROGARGS": they are essential!
eval set -- "$PROGARGS"
unset PROGARGS


while true; do
    case "$1" in
        '-d'|'--domain')
            domain=$2
            passive_scan
            shift 2
            exit 1
            ;;

        '-h'|'--help'|*)
            showhelp
            exit 1
            ;;
    esac
done
